sudo: true
dist: trusty
language: python
python:
  - "3.5"
services:
  - docker
jobs:
  include:
  - stage: Building preCICE
    if: fork = false
    name: "Arch Linux"
    script:
    - docker build -f Dockerfile.Arch -t precice/precice-arch-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-arch-develop:latest

  - stage: Building preCICE
    if: fork = false
    name: "Ubuntu 16.04 home"
    script:
    - docker build -f Dockerfile.Ubuntu1604.home -t precice/precice-ubuntu1604.home-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-ubuntu1604.home-develop:latest

  - stage: Building preCICE
    if: type = cron
    name: "Ubuntu 16.04.sudo"
    script:
    - docker build -f Dockerfile.Ubuntu1604.sudo -t precice/precice-ubuntu1604.sudo-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-ubuntu1604.sudo-develop:latest

  - stage: Building preCICE
    if: type = cron
    name: "Ubuntu 16.04.package"
    script:
    - docker build -f Dockerfile.Ubuntu1604.package -t precice/precice-ubuntu1604.package-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-ubuntu1604.package-develop:latest

  - stage: Building preCICE
    name: "Ubuntu 18.04.home"
    if: fork = false
    script:
    - docker build -f Dockerfile.Ubuntu1804.home -t precice .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-ubuntu1804.home-develop:latest

  - stage: Building preCICE
    name: "Ubuntu 18.04.sudo"
    if: type = cron
    script:
    - docker build -f Dockerfile.Ubuntu1804.sudo -t precice/precice-ubuntu1804.sudo-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-ubuntu1804.sudo-develop

  - stage: Building preCICE
    name: "Ubuntu 18.04.sudo.mpich"
    if: type = cron
    script:
    - docker build -f Dockerfile.Ubuntu1804.sudo.mpich -t precice/precice-ubuntu1804.sudo.mpich-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-ubuntu1804.sudo.mpich-develop:latest

  - stage: Building preCICE
    name: "Ubuntu 18.04.package"
    if: fork = false
    script:
    - docker build -f Dockerfile.Ubuntu1804.package -t precice/precice-ubuntu1804.package-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u precice --password-stdin
    - docker push precice/precice-ubuntu1804.package-develop

  - name: "[Build on fork] Using cached version"
    if: fork = true
    script: true

  - stage: Building adapters
    script: docker build -f Dockerfile.su2-adapter -t precice/su2-adapter-ubuntu1604.home-develop .
    name: SU2 adapter
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u "precice" --password-stdin
    - docker push precice/su2-adapter-ubuntu1604.home-develop

  - name: CalculiX adapter
    script: docker build -f Dockerfile.calculix-adapter -t precice/calculix-adapter-ubuntu1604.home-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u "precice" --password-stdin
    - docker push precice/calculix-adapter-ubuntu1604.home-develop

  - name: deal.ii adapter
    script: docker build -f Dockerfile.dealii-adapter -t precice/dealii-adapter-ubuntu1604.home-develop .
    after_success:
      - echo "$DOCKER_PASSWORD" | docker login -u "precice" --password-stdin
      - docker push precice/dealii-adapter-ubuntu1604.home-develop

  - name: openFOAM adapter
    script: docker build -f Dockerfile.openfoam-adapter -t precice/openfoam-adapter-ubuntu1604.home-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u "precice" --password-stdin
    - docker push precice/openfoam-adapter-ubuntu1604.home-develop

  - name: FEniCS adapter
    script: >
      docker build -f Dockerfile.fenics-adapter -t $DOCKER_USERNAME/fenics-adapter-ubuntu1804.home-develop 
      --build-arg from=precice/precice-ubuntu1804.home-develop .
    after_success:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $DOCKER_USERNAME/fenics-adapter-ubuntu1804.home-develop

  - stage: Tests
    script:
    - python system_testing.py -s su2-ccx
    name: "[16.04] SU2 <-> Calculix"
    after_success:
    - python push.py -s -t su2-ccx
    after_failure:
    - python push.py -t su2-ccx
  - script:
    - python system_testing.py -s of-of
    name: "[16.04] OpenFOAM <-> OpenFOAM"
    after_success:
    - python push.py -s -t of-of
    after_failure:
    - python push.py -t of-of
  - script:
    - python system_testing.py -s of-ccx
    name: "[16.04] Calculix <-> OpenFOAM"
    after_success:
    - python push.py -s -t of-ccx
    after_failure:
    - python push.py -t of-ccx
  - script:
    - python system_testing.py -s fe-fe --base Ubuntu1804.home
    name: "[18.04] FEniCS <-> FEniCS"
    after_success:
    - python push.py -s -t fe-fe --base Ubuntu1804.home
    after_failure:
    - python push.py -t fe-fe --base Ubuntu1804.home
  - script:
    - python system_testing.py -s bindings
    name: "[16.04] Bindings"
    after_success:
    - python push.py -s -t bindings
    after_failure:
    - python push.py -t bindings
  - script:
    - python system_testing.py -s dealii-of
    name: "[16.04] deal.ii <-> OpenFOAM"
    after_success:
    - python push.py -s -t dealii-of
    after_failure:
    - python push.py -t dealii-of
  - script:
    - python system_testing.py -s nutils-of
    name: "[16.04] nutils <-> OpenFOAM"
    after_success:
    - python push.py -s -t nutils-of
    after_failure:
    - python push.py -t nutils-of
  - script:
    - python system_testing.py -s of-of_np
    name: "[16.04] OpenFOAM <-> OpenFOAM [nearest projection]"
    after_success:
    - python push.py -s -t of-of_np
    after_failure:
    - python push.py -t of-of_np
