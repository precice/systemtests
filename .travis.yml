sudo: true
dist: bionic
language: python
python:
  - "3.8"
services:
  - docker
install:
  - pip install Jinja2  # Required for README templates when using push.py

jobs:
  allow_failures:
    # Currently unstable jobs that do not affect the build status
    # To add a job here, list its exact name
    - name: "[18.04] nutils <-> OpenFOAM [failure allowed]"
    - name: "[18.04] SU2 <-> Calculix [unstable][failure allowed]"
    - name: "[20.04 PETSc] SU2 <-> Calculix [unstable][failure allowed]"
    - name: "[18.04 PETSc] OpenFOAM <-> CalculiX [FSI][failure allowed]"


  include:
    - stage: Building preCICE
      name: "Arch Linux"
      if: fork = false
      script:
        - python build_precice.py --dockerfile precice/Dockerfile.Arch --docker-username $DOCKER_USERNAME
        - python push_precice.py --dockerfile precice/Dockerfile.Arch --docker-username $DOCKER_USERNAME
        - python push.py

    - stage: Building preCICE
      name: "Ubuntu 18.04 home [PETSc from source]"
      if: fork = false
      script:
        - python build_precice.py --dockerfile precice/Dockerfile.Ubuntu1804.home --petsc yes --docker-username $DOCKER_USERNAME
        - python push_precice.py --dockerfile precice/Dockerfile.Ubuntu1804.home --petsc yes --docker-username $DOCKER_USERNAME
        - python push.py

    - stage: Building preCICE
      name: "Ubuntu 18.04.package"
      if: fork = false
      script:
        - python build_precice.py --dockerfile precice/Dockerfile.Ubuntu1804.package --docker-username $DOCKER_USERNAME
        - python push_precice.py --dockerfile precice/Dockerfile.Ubuntu1804.package --docker-username $DOCKER_USERNAME
        - python push.py

    - stage: Building preCICE
      name: "Ubuntu 20.04.package [PETSc from APT]"
      if: fork = false
      script:
        - python build_precice.py --dockerfile precice/Dockerfile.Ubuntu2004.package --petsc yes --docker-username $DOCKER_USERNAME
        - python push_precice.py --dockerfile precice/Dockerfile.Ubuntu2004.package --petsc yes --docker-username $DOCKER_USERNAME
        - python push.py

    - name: "[Build preCICE on fork] Using cached version"
      if: fork = true
      script: true



    - stage: Building adapters
      name: "[18.04] OpenFOAM adapter"
      if: fork = false
      script:
        - python build_adapter.py --dockerfile adapters/Dockerfile.openfoam-adapter --operating-system ubuntu1804 --precice-installation package --docker-username $DOCKER_USERNAME
        - python push_adapter.py --dockerfile adapters/Dockerfile.openfoam-adapter --operating-system ubuntu1804 --precice-installation package --docker-username $DOCKER_USERNAME
        - python push.py

    - name: "[18.04] OpenFOAM adapter [PETSc]"
      if: fork = false
      script:
        - python build_adapter.py --dockerfile adapters/Dockerfile.openfoam-adapter --operating-system ubuntu1804 --precice-installation home --petsc yes --docker-username $DOCKER_USERNAME
        - python push_adapter.py --dockerfile adapters/Dockerfile.openfoam-adapter --operating-system ubuntu1804 --precice-installation home --petsc yes --docker-username $DOCKER_USERNAME
        - python push.py

    - name: "[20.04] OpenFOAM adapter [PETSc]"
      if: fork = false
      script:
        - python build_adapter.py --dockerfile adapters/Dockerfile.openfoam-adapter --operating-system ubuntu2004 --precice-installation package --petsc yes --docker-username $DOCKER_USERNAME
        - python push_adapter.py --dockerfile adapters/Dockerfile.openfoam-adapter --operating-system ubuntu2004 --precice-installation package --petsc yes --docker-username $DOCKER_USERNAME
        - python push.py

    - name: "[Build adapters on fork] Using cached version"
      if: fork = true
      script: true



    - stage: Tests
      name: "[18.04] nutils <-> OpenFOAM [failure allowed]"
      script:
        - python system_testing.py -s nutils-of -v
        - python push.py

