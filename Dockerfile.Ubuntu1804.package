# Dockerfile for building preCICE on ubuntu 18.04

# Using ubuntu 18.04 as basis
FROM ubuntu:18.04
# additional variables to sync with the host
ARG CCACHE_REMOTE

# Installing necessary dependacies for preCICE, boost 1.65 from apt-get
RUN apt-get -qq update && apt-get -qq install \
    build-essential \
    libboost-all-dev \
    libeigen3-dev \
    libxml2-dev \
    petsc-dev \
    git \
    python-numpy \
    python-dev \
    wget \
    bzip2 \
    cmake \
    rsync \
    ccache && \
    rm -rf /var/lib/apt/lists/*

# Rebuild image if force_rebuild after that command
ARG CACHEBUST

# create user precice
RUN useradd -ms /bin/bash precice
USER precice
WORKDIR /home/precice

# Setting some environment variables for installing preCICE
ENV CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:/usr/include/eigen3" \
    CPATH="/usr/include/eigen3:${CPATH}" \
    PETSC_DIR="/usr/lib/petscdir/3.6.2/" \
    PETSC_ARCH="x86_64-linux-gnu-real"

# Building preCICE
ARG branch=develop
RUN git clone --branch $branch https://github.com/precice/precice.git /home/precice/precice
# Some parameters for the build, you can set them in the build command e.g.
# sudo docker build Dockerfile.precice --build-arg petsc_para=yes --build-arg mpi_para=yes .
# this will result in
# cmake -DPETSC=yes -DMPI=yes -DPYTHON=no compiler="mpicxx" -j2 /home/precice/precice
RUN if [ ! -z "$CCACHE_REMOTE" ]; then\
        rsync -azpvr ${CCACHE_REMOTE} ~/.ccache; \
    fi

ARG petsc_para=no
ARG mpi_para=yes
ARG python_para=no
# Build preCICE and clean-up generated object files
RUN mkdir /home/precice/precice-build && \
    cd /home/precice/precice-build && \
    cmake -DBUILD_SHARED_LIBS=ON \
          -DPRECICE_Packages=ON \
          -DPRECICE_InstallTest=ON \
          -DCMAKE_INSTALL_PREFIX=/usr \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DPETSC=$petsc_para \
          -DMPI=$mpi_para \
          -DPYTHON=$python_para \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          /home/precice/precice && \
    make -j$(nproc) && \
    make test_base && \
    make package && \
    if [ ! -z "${CCACHE_REMOTE}" ]; then \
      rsync -azpvr --delete ~/.ccache/ ${CCACHE_REMOTE} &&\
      rm -rf ~/.ccache; \
    fi && \
    mv $(find . -maxdepth 1 -name "*.deb") /home/precice && \
    rm -r /home/precice/precice-build  # copy *.deb to home/precice; we do not need the remaining files in precice-build anymore and delete them
# user with sudo rights is needed to install preCICE in debian package
USER root
RUN cd /home/precice && dpkg -i $(find . -maxdepth 1 -name "*.deb")

# Setting preCICE environment variables
USER precice
ENV PRECICE_ROOT="/home/precice/precice"
