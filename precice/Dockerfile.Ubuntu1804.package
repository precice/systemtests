# Dockerfile for building preCICE
#   OS version:           Ubuntu 18.04
#   User:                 precice
#   PETSc install:        from apt [OUTDATED]
#   precice install:      as Debian package

# Note: This image should always be built with PETSc support disabled!
#       The installation of petsc-dev through apt is strictly necessary for the
#       fenics-adapter, whereby we cannot overwrite the installation by building
#       PETSc from source. As a result, the PETSc version installed here is needed,
#       but not sufficient for building with preCICE.

# Use official Ubuntu 18.04 as base
FROM ubuntu:18.04

# Avoid timeouts during install due to interactive installs
ARG DEBIAN_FRONTEND=noninteractive

# Install necessary dependencies for preCICE, Boost 1.65 from apt-get
RUN apt-get -qq update && apt-get -qq install \
    build-essential \
    locales \
    libboost-all-dev \
    libeigen3-dev \
    libxml2-dev \
    git \
    python3-numpy \
    python3-dev \
    petsc-dev \
    wget \
    bzip2 \
    cmake && \
    rm -rf /var/lib/apt/lists/*

# Create user precice
ARG uid=1000
ARG gid=1000
RUN groupadd -g ${gid} precice \
    && useradd -u ${uid} -g ${gid} -m -s /bin/bash precice

# Set locale
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_NUMERIC en_US.UTF-8
ENV LC_ALL en_US.UTF-8

USER precice


# Rebuild image from here on if `force_rebuild` is enabled
ARG CACHEBUST

# Set some environment variables for installing preCICE
ENV CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:/usr/include/eigen3" \
    CPATH="/usr/include/eigen3:${CPATH}"

# Build preCICE
WORKDIR /home/precice
ARG branch=develop
RUN git clone --depth 1 --branch $branch https://github.com/precice/precice.git /home/precice/precice

# Set parameters for the build, these can be overwritten by the docker build command
# Example: `docker build --build-arg petsc_para=yes --build-arg mpi_para=yes .`
ARG petsc_para=no
ARG mpi_para=yes
ARG python_para=no

# Build preCICE and clean-up generated object files afterwards
RUN mkdir /home/precice/precice-build && \
    cd /home/precice/precice-build && \
    cmake -DBUILD_SHARED_LIBS=ON \
          -DPRECICE_Packages=ON \
          -DPRECICE_InstallTest=ON \
          -DCMAKE_INSTALL_PREFIX=/usr \
          -DCMAKE_BUILD_TYPE=Debug \
          -DPRECICE_PETScMapping=$petsc_para \
          -DPRECICE_MPICommunication=$mpi_para \
          -DPRECICE_PythonActions=$python_para \
          /home/precice/precice && \
    make -j$(nproc) && \
    make test_base && \
    make package && \
    mv $(find . -maxdepth 1 -name "*.deb") /home/precice && \
    rm -r /home/precice/precice-build  # copy *.deb to home/precice; we do not need the remaining files in precice-build anymore and delete them
# user with sudo rights is needed to install preCICE in debian package
USER root
RUN cd /home/precice && dpkg -i $(find . -maxdepth 1 -name "*.deb")

# Set preCICE environment variables
USER precice
ENV PRECICE_ROOT="/home/precice/precice"
